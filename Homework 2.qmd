---
title: "Some Programming in Base R"
author: "Cass Crews"
format: html
editor: visual
---

# Task 1

We are analyzing blood pressure before and after a medical treatment. 

### 1.

First, we will create the vectors corresponding to pre-treatment and post-treatment blood pressures. 

```{r}
#Pre-treatment blood pressure
pre_treat_bp<-c(120, 151, 125, 126, 115, 132, 132, 129, 134, 139, 127, 122, 
                127, 135, 133, 128, 147, 138, 140, 132)

#Post-treatment blood pressure
post_treat_bp<-c(127, 145, 135, 122, 115, 122, 123, 126, 126, 129, 132, 146, 
                 120, 114, 121, 120, 128, 120, 133, 115)
```


### 2.

Next, we will assign names to each observation in each vector, corresponding to the subject each observation belongs to. 

```{r}
#Assigning names to pre-treatment vector
names(pre_treat_bp)<-paste("Subject", 1:20, sep = "_")

#Assigning names to post-treatment vector
names(post_treat_bp)<-paste("Subject", 1:20, sep = "_")
```

### 3.

Next, we will take the difference between pre-treatment blood pressures and post-treatment pressures. The subject-specific differences are printed below. 

```{r}
#Calculating differences in BP
diff_bp<-pre_treat_bp-post_treat_bp

#Printing the differences
diff_bp
```

### 4. 

Next, we will calculate the average difference across the 20 subjects: 5.65.  

```{r}
#Calculating average difference
mean_diff_bp<-mean(diff_bp)

#Printing average
mean_diff_bp
```

### 5.

Next, we will identify the subjects that experienced a decrease in blood pressure following treatment. Those 15 subjects are listed below. 

```{r}
#Identifying which subjects experienced a decrease in BP
which(diff_bp> 0)
```

### 6.

Next, we will subset the vector of differences to capture only those subjects that experienced a decrease in blood pressure (positive change). The resultant vector is listed below. 

```{r}
#Creating a vector of only the positive differences
pos_diff_bp<-diff_bp[diff_bp> 0]

#Printing vector
pos_diff_bp
```

### 7. 

Finally, we will calculate the average decrease among only those that experienced a decrease: 10.6

```{r}
#Calculating average difference for only positive changes
mean_pos_diff_bp<-mean(pos_diff_bp)

#Printing average
mean_pos_diff_bp
```

# Task 2

We now combine our data from Task 1 in a data frame. 

### 1. 

First, we create the data frame.

```{r}
#Creating initial data frame, preventing data frame from inheriting column names from numeric vectors
bp_data<-data.frame(patient=names(pre_treat_bp),pre_bp=pre_treat_bp,post_bp=post_treat_bp,diff_bp=diff_bp,row.names=NULL)
```

### 2. 

Next, we explore the patients with negative differences between pre-treatment blood pressure and post-treatment blood pressure. The records for those patients are printed below. 

```{r}

bp_data_neg_diff<-bp_data[bp_data$diff_bp< 0,]
bp_data_neg_diff
```

### 3. 

Next, we create a new column in our data frame indicating whether post-treatment blood pressure was below 120 (TRUE) or not (FALSE).

```{r}
#Adding an indicator for whether post-treatment BP is below 120
bp_data$post_bp_sub120<-(bp_data$post_bp< 120)
```

### 4. 

Finally, we print our data frame as a table. 

```{r}
knitr::kable(bp_data)
```


# Task 3

### 1. 

First, we will create a data frame for the control group that structurally matches the treatment group. 

```{r}
#Creating initial data frame with pre-"treatment" and post-"treatment BP
bp_data_control<-data.frame(patient=paste("Subject", 1:10, sep = "_"),
                    pre_bp=c(138, 135, 147, 117, 152, 134, 114, 121, 131, 130),
                    post_bp=c(105, 136, 123, 130, 134, 143, 135, 139, 120, 124),
                    row.names=NULL)

#Adding difference column between pre- and post-treatment BP
bp_data_control$diff_bp<-bp_data_control$pre_bp-bp_data_control$post_bp

#Adding an indicator for whether post-treatment BP is below 120
bp_data_control$post_bp_sub120<-(bp_data_control$post_bp< 120)
```

### 2. 

Next, we will combine the data frame from Task 2 with our new data frame in a list. 

```{r}
#Creating list combining treatment and placebo data frames
experiment_data<-list(treatment=bp_data,placebo=bp_data_control)
```

### 3. 

Next, we will access the first element of the list, `treatment`, using three different types of syntax:

* `experiment_data[1]` will return the first element while retaining the list structure
* `experiment_data[[1]]` will return the first element in its original data frame structure
* `experiment_data$treatment` will also return the first element in its original data frame structure

```{r}
#Returning the first element using []
experiment_data[1]

#Returning the first element using [[]]
experiment_data[[1]]

#Returning the first element using the $ operator
experiment_data$treatment
```

### 4.

Finally, we will access the `pre_bp` column of `placebo` using only a single line of code. Note that I am preserving the data frame structure so `pre_bp` displays as a column. Alternatively, `experiment_data$placebo$pre_bp` would've produced the column as a vector. 

```{r}
#Accessing pre_bp in placebo element
experiment_data$placebo["pre_bp"]
```



